{"id":"demo-1.js","dependencies":[{"name":"G:\\demo\\package.json","includedInParent":true,"mtime":1567075642892}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconsole.log(\"demo-1.js\");\n/**\r\n * return 形式\r\n */\n// export default { a: 1, b: 2, c: (arg1, arg2) => arg1 + arg2 };\n\n/**\r\n * 回调函数\r\n */\n// export default {\n//   a: 1,\n//   b: 2,\n//   c: (arg1, arg2, cb) => {\n//     let sum = arg1 + arg2;\n//     cb(sum);\n//   }\n// };\n\n/**\r\n * Promise 形式\r\n */\n\nvar _default = {\n  a: 1,\n  b: 2,\n  c: function c(arg1, arg2) {\n    var promsie = new Promise(function (resolve, reject) {\n      var sum = arg1 + arg2;\n      resolve(sum);\n    });\n    return promsie;\n  }\n};\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"name":"console","generated":{"line":7,"column":0},"source":"demo-1.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":7},"source":"demo-1.js","original":{"line":1,"column":7}},{"name":"log","generated":{"line":7,"column":8},"source":"demo-1.js","original":{"line":1,"column":8}},{"generated":{"line":7,"column":11},"source":"demo-1.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":12},"source":"demo-1.js","original":{"line":1,"column":12}},{"generated":{"line":7,"column":23},"source":"demo-1.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"demo-1.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"demo-1.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"demo-1.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"demo-1.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"demo-1.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"demo-1.js","original":{"line":13,"column":0}},{"generated":{"line":19,"column":0},"source":"demo-1.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"demo-1.js","original":{"line":15,"column":0}},{"generated":{"line":21,"column":0},"source":"demo-1.js","original":{"line":16,"column":0}},{"generated":{"line":22,"column":0},"source":"demo-1.js","original":{"line":17,"column":0}},{"generated":{"line":23,"column":0},"source":"demo-1.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"demo-1.js","original":{"line":20,"column":0}},{"generated":{"line":29,"column":15},"source":"demo-1.js","original":{"line":23,"column":15}},{"name":"a","generated":{"line":30,"column":0},"source":"demo-1.js","original":{"line":24,"column":2}},{"name":"a","generated":{"line":30,"column":2},"source":"demo-1.js","original":{"line":24,"column":2}},{"generated":{"line":30,"column":3},"source":"demo-1.js","original":{"line":24,"column":3}},{"generated":{"line":30,"column":5},"source":"demo-1.js","original":{"line":24,"column":5}},{"generated":{"line":30,"column":6},"source":"demo-1.js","original":{"line":23,"column":15}},{"name":"b","generated":{"line":31,"column":0},"source":"demo-1.js","original":{"line":25,"column":2}},{"name":"b","generated":{"line":31,"column":2},"source":"demo-1.js","original":{"line":25,"column":2}},{"generated":{"line":31,"column":3},"source":"demo-1.js","original":{"line":25,"column":3}},{"generated":{"line":31,"column":5},"source":"demo-1.js","original":{"line":25,"column":5}},{"generated":{"line":31,"column":6},"source":"demo-1.js","original":{"line":23,"column":15}},{"name":"c","generated":{"line":32,"column":0},"source":"demo-1.js","original":{"line":26,"column":2}},{"name":"c","generated":{"line":32,"column":2},"source":"demo-1.js","original":{"line":26,"column":2}},{"generated":{"line":32,"column":3},"source":"demo-1.js","original":{"line":26,"column":3}},{"generated":{"line":32,"column":5},"source":"demo-1.js","original":{"line":26,"column":5}},{"name":"arg1","generated":{"line":32,"column":16},"source":"demo-1.js","original":{"line":26,"column":6}},{"generated":{"line":32,"column":20},"source":"demo-1.js","original":{"line":26,"column":5}},{"name":"arg2","generated":{"line":32,"column":22},"source":"demo-1.js","original":{"line":26,"column":12}},{"generated":{"line":32,"column":26},"source":"demo-1.js","original":{"line":26,"column":5}},{"generated":{"line":32,"column":28},"source":"demo-1.js","original":{"line":26,"column":21}},{"generated":{"line":33,"column":0},"source":"demo-1.js","original":{"line":27,"column":4}},{"name":"promsie","generated":{"line":33,"column":8},"source":"demo-1.js","original":{"line":27,"column":8}},{"generated":{"line":33,"column":15},"source":"demo-1.js","original":{"line":27,"column":15}},{"generated":{"line":33,"column":18},"source":"demo-1.js","original":{"line":27,"column":18}},{"name":"Promise","generated":{"line":33,"column":22},"source":"demo-1.js","original":{"line":27,"column":22}},{"generated":{"line":33,"column":29},"source":"demo-1.js","original":{"line":27,"column":18}},{"generated":{"line":33,"column":30},"source":"demo-1.js","original":{"line":27,"column":30}},{"name":"resolve","generated":{"line":33,"column":40},"source":"demo-1.js","original":{"line":27,"column":31}},{"generated":{"line":33,"column":47},"source":"demo-1.js","original":{"line":27,"column":30}},{"name":"reject","generated":{"line":33,"column":49},"source":"demo-1.js","original":{"line":27,"column":40}},{"generated":{"line":33,"column":55},"source":"demo-1.js","original":{"line":27,"column":30}},{"generated":{"line":33,"column":57},"source":"demo-1.js","original":{"line":27,"column":51}},{"generated":{"line":34,"column":0},"source":"demo-1.js","original":{"line":28,"column":6}},{"name":"sum","generated":{"line":34,"column":10},"source":"demo-1.js","original":{"line":28,"column":10}},{"generated":{"line":34,"column":13},"source":"demo-1.js","original":{"line":28,"column":13}},{"name":"arg1","generated":{"line":34,"column":16},"source":"demo-1.js","original":{"line":28,"column":16}},{"generated":{"line":34,"column":20},"source":"demo-1.js","original":{"line":28,"column":20}},{"name":"arg2","generated":{"line":34,"column":23},"source":"demo-1.js","original":{"line":28,"column":23}},{"generated":{"line":34,"column":27},"source":"demo-1.js","original":{"line":28,"column":6}},{"name":"resolve","generated":{"line":35,"column":0},"source":"demo-1.js","original":{"line":29,"column":6}},{"name":"resolve","generated":{"line":35,"column":6},"source":"demo-1.js","original":{"line":29,"column":6}},{"generated":{"line":35,"column":13},"source":"demo-1.js","original":{"line":29,"column":13}},{"name":"sum","generated":{"line":35,"column":14},"source":"demo-1.js","original":{"line":29,"column":14}},{"generated":{"line":35,"column":17},"source":"demo-1.js","original":{"line":29,"column":13}},{"generated":{"line":35,"column":18},"source":"demo-1.js","original":{"line":29,"column":6}},{"generated":{"line":36,"column":0},"source":"demo-1.js","original":{"line":30,"column":5}},{"generated":{"line":36,"column":5},"source":"demo-1.js","original":{"line":27,"column":18}},{"generated":{"line":36,"column":6},"source":"demo-1.js","original":{"line":27,"column":4}},{"generated":{"line":37,"column":0},"source":"demo-1.js","original":{"line":32,"column":4}},{"name":"promsie","generated":{"line":37,"column":11},"source":"demo-1.js","original":{"line":32,"column":11}},{"generated":{"line":37,"column":18},"source":"demo-1.js","original":{"line":32,"column":4}},{"generated":{"line":38,"column":0},"source":"demo-1.js","original":{"line":33,"column":3}},{"generated":{"line":39,"column":0},"source":"demo-1.js","original":{"line":23,"column":15}}],"sources":{"demo-1.js":"console.log(\"demo-1.js\");\r\n\r\n/**\r\n * return 形式\r\n */\r\n// export default { a: 1, b: 2, c: (arg1, arg2) => arg1 + arg2 };\r\n\r\n/**\r\n * 回调函数\r\n */\r\n// export default {\r\n//   a: 1,\r\n//   b: 2,\r\n//   c: (arg1, arg2, cb) => {\r\n//     let sum = arg1 + arg2;\r\n//     cb(sum);\r\n//   }\r\n// };\r\n\r\n/**\r\n * Promise 形式\r\n */\r\nexport default {\r\n  a: 1,\r\n  b: 2,\r\n  c: (arg1, arg2) => {\r\n    let promsie = new Promise((resolve, reject) => {\r\n      let sum = arg1 + arg2;\r\n      resolve(sum);\r\n    });\r\n\r\n    return promsie;\r\n  }\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"769fe5c672e225f6b6f18029ee2124ec","cacheData":{"env":{}}}